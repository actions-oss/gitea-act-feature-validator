on: push
jobs:
  test:
    runs-on: macos-latest
    env:
      GITEA_PORT: ${{ vars.GITEA_PORT || '3005' }}
    steps:
    - uses: actions/checkout@v4
    - name: Download Runner
      if: ${{ !vars.RUNNER_BIN }}
      shell: bash
      run: |
        curl -L https://dl.gitea.com/act_runner/0.2.12/act_runner-0.2.12-darwin-arm64 --output "$RUNNER_TEMP/gitea-runner"
        chmod +x "$RUNNER_TEMP/gitea-runner"
        echo "RUNNER_BIN=$RUNNER_TEMP/gitea-runner" >> $GITHUB_ENV
    - uses: ./.github/actions/setup-gitea
      with:
        gitea_bin: ${{ vars.GITEA_BIN }}
        gitea_port: ${{ env.GITEA_PORT }}
    - name: Run tests
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');

          await github.rest.repos.createForAuthenticatedUser({
            name: 'test-repo',
            private: false,
            auto_init: true,
            default_branch: 'main',
            trust_model: 'committer',
          })
          // Create new file in the repository
          await github.request("POST /repos/{owner}/{repo}/contents/{path}", {
            owner: "test01",
            repo: "test-repo",
            path: '.github/workflows/test.yml',
            message: 'Add test workflow',
            branch: 'main',
            content: Buffer.from(`on: push
          jobs:
            test:
              runs-on: ubuntu-latest
              steps:
              - name: Checkout code
                uses: actions/checkout@v4
              - name: Run tests
                run: |
                  echo key=value > $GITEA_ENV
              - run: exit 1
                if: env.key != 'value'
          `).toString('base64'),
          });
          await exec.exec(`${process.env.RUNNER_BIN} register --instance http://localhost:${{ env.GITEA_PORT }} --token ${process.env.RUNNER_TOKEN} --name test-runner --labels ubuntu-latest --no-interactive`);

          await exec.exec(`${process.env.RUNNER_BIN} daemon --once`);

          const runs = await github.rest.actions.listWorkflowRunsForRepo({
            owner: "test01",
            repo: "test-repo",
            per_page: 10 // You can adjust this number
          });

          for (const run of runs.data.workflow_runs) {
            console.log(`\nðŸŒ€ Workflow Run: ${run.id} - ${run.name} - Status: ${run.status}`);

            const jobs = await github.rest.actions.listJobsForWorkflowRun({
              owner: "test01",
              repo: "test-repo",
              run_id: run.id
            });

            for (const job of jobs.data.jobs) {
              console.log(`ðŸ”§ Job: ${job.id} - ${job.name} - Status: ${job.status} - Conclusion: ${job.conclusion}`);

              const jobLogs = await github.request('GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs', {
                owner: "test01",
                repo: "test-repo",
                job_id: job.id // replace with actual job ID
              });
              process.stdout.write(jobLogs.data + "\n");
            }
          }
        github-token: ${{ env.TOKEN }}
        base-url: "http://localhost:${{ env.GITEA_PORT }}/api/v1"
      env:
        RUNNER_BIN: ${{ vars.RUNNER_BIN || env.RUNNER_BIN }}
    - name: Sleep
      if: vars.SLEEP
      run: |
        sleep ${{ vars.SLEEP }}
